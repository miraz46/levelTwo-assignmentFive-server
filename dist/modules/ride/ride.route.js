"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RidesRoutes = void 0;
const express_1 = require("express");
const checkAuth_1 = require("../../middlewares/checkAuth");
const user_interface_1 = require("../user/user.interface");
const validateRequest_1 = require("../../middlewares/validateRequest");
const ride_validation_1 = require("./ride.validation");
const ride_controller_1 = require("./ride.controller");
const router = (0, express_1.Router)();
router.get("/", (0, checkAuth_1.checkAuth)(user_interface_1.Role.ADMIN), ride_controller_1.RidesController.getAllRides);
router.post("/request", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), (0, validateRequest_1.validateRequest)(ride_validation_1.createRideZodSchema), ride_controller_1.RidesController.requestRides);
router.delete("/cancel/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER), ride_controller_1.RidesController.cancelRides);
router.get("/history", (0, checkAuth_1.checkAuth)(user_interface_1.Role.RIDER, user_interface_1.Role.DRIVER), ride_controller_1.RidesController.getRideHistory);
router.patch("/accept/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RidesController.acceptRides);
router.patch("/reject/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RidesController.rejectRides);
router.patch("/status/:id", (0, checkAuth_1.checkAuth)(user_interface_1.Role.DRIVER), ride_controller_1.RidesController.changeRideStatus);
exports.RidesRoutes = router;
